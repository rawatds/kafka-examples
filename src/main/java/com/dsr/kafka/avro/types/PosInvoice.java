/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.dsr.kafka.avro.types;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class PosInvoice extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 539035669312715896L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PosInvoice\",\"namespace\":\"com.dsr.kafka.avro.types\",\"fields\":[{\"name\":\"InvoiceNumber\",\"type\":[\"null\",\"string\"]},{\"name\":\"PosID\",\"type\":[\"null\",\"string\"]},{\"name\":\"CashierID\",\"type\":[\"null\",\"string\"]},{\"name\":\"CreatedTime\",\"type\":[\"null\",\"long\"]},{\"name\":\"TotalAmount\",\"type\":[\"null\",\"double\"]},{\"name\":\"NumberOfItems\",\"type\":[\"null\",\"int\"]},{\"name\":\"DeliveryType\",\"type\":[\"null\",\"string\"]},{\"name\":\"DeliveryAddress\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DeliveryAddress\",\"fields\":[{\"name\":\"AddressLine\",\"type\":[\"null\",\"string\"]},{\"name\":\"City\",\"type\":[\"null\",\"string\"]},{\"name\":\"State\",\"type\":[\"null\",\"string\"]},{\"name\":\"Pincode\",\"type\":[\"null\",\"string\"]},{\"name\":\"MobileNumber\",\"type\":[\"null\",\"string\"]}]}]},{\"name\":\"InvoiceLineItems\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LineItem\",\"fields\":[{\"name\":\"ItemCode\",\"type\":[\"null\",\"string\"]},{\"name\":\"ItemDescription\",\"type\":[\"null\",\"string\"]},{\"name\":\"ItemPrice\",\"type\":[\"null\",\"double\"]},{\"name\":\"ItemQty\",\"type\":[\"null\",\"int\"]},{\"name\":\"TotalValue\",\"type\":[\"null\",\"double\"]}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PosInvoice> ENCODER =
      new BinaryMessageEncoder<PosInvoice>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PosInvoice> DECODER =
      new BinaryMessageDecoder<PosInvoice>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PosInvoice> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PosInvoice> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PosInvoice> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PosInvoice>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PosInvoice to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PosInvoice from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PosInvoice instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PosInvoice fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence InvoiceNumber;
   private java.lang.CharSequence PosID;
   private java.lang.CharSequence CashierID;
   private java.lang.Long CreatedTime;
   private java.lang.Double TotalAmount;
   private java.lang.Integer NumberOfItems;
   private java.lang.CharSequence DeliveryType;
   private com.dsr.kafka.avro.types.DeliveryAddress DeliveryAddress;
   private java.util.List<com.dsr.kafka.avro.types.LineItem> InvoiceLineItems;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PosInvoice() {}

  /**
   * All-args constructor.
   * @param InvoiceNumber The new value for InvoiceNumber
   * @param PosID The new value for PosID
   * @param CashierID The new value for CashierID
   * @param CreatedTime The new value for CreatedTime
   * @param TotalAmount The new value for TotalAmount
   * @param NumberOfItems The new value for NumberOfItems
   * @param DeliveryType The new value for DeliveryType
   * @param DeliveryAddress The new value for DeliveryAddress
   * @param InvoiceLineItems The new value for InvoiceLineItems
   */
  public PosInvoice(java.lang.CharSequence InvoiceNumber, java.lang.CharSequence PosID, java.lang.CharSequence CashierID, java.lang.Long CreatedTime, java.lang.Double TotalAmount, java.lang.Integer NumberOfItems, java.lang.CharSequence DeliveryType, com.dsr.kafka.avro.types.DeliveryAddress DeliveryAddress, java.util.List<com.dsr.kafka.avro.types.LineItem> InvoiceLineItems) {
    this.InvoiceNumber = InvoiceNumber;
    this.PosID = PosID;
    this.CashierID = CashierID;
    this.CreatedTime = CreatedTime;
    this.TotalAmount = TotalAmount;
    this.NumberOfItems = NumberOfItems;
    this.DeliveryType = DeliveryType;
    this.DeliveryAddress = DeliveryAddress;
    this.InvoiceLineItems = InvoiceLineItems;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return InvoiceNumber;
    case 1: return PosID;
    case 2: return CashierID;
    case 3: return CreatedTime;
    case 4: return TotalAmount;
    case 5: return NumberOfItems;
    case 6: return DeliveryType;
    case 7: return DeliveryAddress;
    case 8: return InvoiceLineItems;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: InvoiceNumber = (java.lang.CharSequence)value$; break;
    case 1: PosID = (java.lang.CharSequence)value$; break;
    case 2: CashierID = (java.lang.CharSequence)value$; break;
    case 3: CreatedTime = (java.lang.Long)value$; break;
    case 4: TotalAmount = (java.lang.Double)value$; break;
    case 5: NumberOfItems = (java.lang.Integer)value$; break;
    case 6: DeliveryType = (java.lang.CharSequence)value$; break;
    case 7: DeliveryAddress = (com.dsr.kafka.avro.types.DeliveryAddress)value$; break;
    case 8: InvoiceLineItems = (java.util.List<com.dsr.kafka.avro.types.LineItem>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'InvoiceNumber' field.
   * @return The value of the 'InvoiceNumber' field.
   */
  public java.lang.CharSequence getInvoiceNumber() {
    return InvoiceNumber;
  }


  /**
   * Sets the value of the 'InvoiceNumber' field.
   * @param value the value to set.
   */
  public void setInvoiceNumber(java.lang.CharSequence value) {
    this.InvoiceNumber = value;
  }

  /**
   * Gets the value of the 'PosID' field.
   * @return The value of the 'PosID' field.
   */
  public java.lang.CharSequence getPosID() {
    return PosID;
  }


  /**
   * Sets the value of the 'PosID' field.
   * @param value the value to set.
   */
  public void setPosID(java.lang.CharSequence value) {
    this.PosID = value;
  }

  /**
   * Gets the value of the 'CashierID' field.
   * @return The value of the 'CashierID' field.
   */
  public java.lang.CharSequence getCashierID() {
    return CashierID;
  }


  /**
   * Sets the value of the 'CashierID' field.
   * @param value the value to set.
   */
  public void setCashierID(java.lang.CharSequence value) {
    this.CashierID = value;
  }

  /**
   * Gets the value of the 'CreatedTime' field.
   * @return The value of the 'CreatedTime' field.
   */
  public java.lang.Long getCreatedTime() {
    return CreatedTime;
  }


  /**
   * Sets the value of the 'CreatedTime' field.
   * @param value the value to set.
   */
  public void setCreatedTime(java.lang.Long value) {
    this.CreatedTime = value;
  }

  /**
   * Gets the value of the 'TotalAmount' field.
   * @return The value of the 'TotalAmount' field.
   */
  public java.lang.Double getTotalAmount() {
    return TotalAmount;
  }


  /**
   * Sets the value of the 'TotalAmount' field.
   * @param value the value to set.
   */
  public void setTotalAmount(java.lang.Double value) {
    this.TotalAmount = value;
  }

  /**
   * Gets the value of the 'NumberOfItems' field.
   * @return The value of the 'NumberOfItems' field.
   */
  public java.lang.Integer getNumberOfItems() {
    return NumberOfItems;
  }


  /**
   * Sets the value of the 'NumberOfItems' field.
   * @param value the value to set.
   */
  public void setNumberOfItems(java.lang.Integer value) {
    this.NumberOfItems = value;
  }

  /**
   * Gets the value of the 'DeliveryType' field.
   * @return The value of the 'DeliveryType' field.
   */
  public java.lang.CharSequence getDeliveryType() {
    return DeliveryType;
  }


  /**
   * Sets the value of the 'DeliveryType' field.
   * @param value the value to set.
   */
  public void setDeliveryType(java.lang.CharSequence value) {
    this.DeliveryType = value;
  }

  /**
   * Gets the value of the 'DeliveryAddress' field.
   * @return The value of the 'DeliveryAddress' field.
   */
  public com.dsr.kafka.avro.types.DeliveryAddress getDeliveryAddress() {
    return DeliveryAddress;
  }


  /**
   * Sets the value of the 'DeliveryAddress' field.
   * @param value the value to set.
   */
  public void setDeliveryAddress(com.dsr.kafka.avro.types.DeliveryAddress value) {
    this.DeliveryAddress = value;
  }

  /**
   * Gets the value of the 'InvoiceLineItems' field.
   * @return The value of the 'InvoiceLineItems' field.
   */
  public java.util.List<com.dsr.kafka.avro.types.LineItem> getInvoiceLineItems() {
    return InvoiceLineItems;
  }


  /**
   * Sets the value of the 'InvoiceLineItems' field.
   * @param value the value to set.
   */
  public void setInvoiceLineItems(java.util.List<com.dsr.kafka.avro.types.LineItem> value) {
    this.InvoiceLineItems = value;
  }

  /**
   * Creates a new PosInvoice RecordBuilder.
   * @return A new PosInvoice RecordBuilder
   */
  public static com.dsr.kafka.avro.types.PosInvoice.Builder newBuilder() {
    return new com.dsr.kafka.avro.types.PosInvoice.Builder();
  }

  /**
   * Creates a new PosInvoice RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PosInvoice RecordBuilder
   */
  public static com.dsr.kafka.avro.types.PosInvoice.Builder newBuilder(com.dsr.kafka.avro.types.PosInvoice.Builder other) {
    if (other == null) {
      return new com.dsr.kafka.avro.types.PosInvoice.Builder();
    } else {
      return new com.dsr.kafka.avro.types.PosInvoice.Builder(other);
    }
  }

  /**
   * Creates a new PosInvoice RecordBuilder by copying an existing PosInvoice instance.
   * @param other The existing instance to copy.
   * @return A new PosInvoice RecordBuilder
   */
  public static com.dsr.kafka.avro.types.PosInvoice.Builder newBuilder(com.dsr.kafka.avro.types.PosInvoice other) {
    if (other == null) {
      return new com.dsr.kafka.avro.types.PosInvoice.Builder();
    } else {
      return new com.dsr.kafka.avro.types.PosInvoice.Builder(other);
    }
  }

  /**
   * RecordBuilder for PosInvoice instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PosInvoice>
    implements org.apache.avro.data.RecordBuilder<PosInvoice> {

    private java.lang.CharSequence InvoiceNumber;
    private java.lang.CharSequence PosID;
    private java.lang.CharSequence CashierID;
    private java.lang.Long CreatedTime;
    private java.lang.Double TotalAmount;
    private java.lang.Integer NumberOfItems;
    private java.lang.CharSequence DeliveryType;
    private com.dsr.kafka.avro.types.DeliveryAddress DeliveryAddress;
    private com.dsr.kafka.avro.types.DeliveryAddress.Builder DeliveryAddressBuilder;
    private java.util.List<com.dsr.kafka.avro.types.LineItem> InvoiceLineItems;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.dsr.kafka.avro.types.PosInvoice.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.InvoiceNumber)) {
        this.InvoiceNumber = data().deepCopy(fields()[0].schema(), other.InvoiceNumber);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.PosID)) {
        this.PosID = data().deepCopy(fields()[1].schema(), other.PosID);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.CashierID)) {
        this.CashierID = data().deepCopy(fields()[2].schema(), other.CashierID);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.CreatedTime)) {
        this.CreatedTime = data().deepCopy(fields()[3].schema(), other.CreatedTime);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.TotalAmount)) {
        this.TotalAmount = data().deepCopy(fields()[4].schema(), other.TotalAmount);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.NumberOfItems)) {
        this.NumberOfItems = data().deepCopy(fields()[5].schema(), other.NumberOfItems);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.DeliveryType)) {
        this.DeliveryType = data().deepCopy(fields()[6].schema(), other.DeliveryType);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.DeliveryAddress)) {
        this.DeliveryAddress = data().deepCopy(fields()[7].schema(), other.DeliveryAddress);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (other.hasDeliveryAddressBuilder()) {
        this.DeliveryAddressBuilder = com.dsr.kafka.avro.types.DeliveryAddress.newBuilder(other.getDeliveryAddressBuilder());
      }
      if (isValidValue(fields()[8], other.InvoiceLineItems)) {
        this.InvoiceLineItems = data().deepCopy(fields()[8].schema(), other.InvoiceLineItems);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing PosInvoice instance
     * @param other The existing instance to copy.
     */
    private Builder(com.dsr.kafka.avro.types.PosInvoice other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.InvoiceNumber)) {
        this.InvoiceNumber = data().deepCopy(fields()[0].schema(), other.InvoiceNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.PosID)) {
        this.PosID = data().deepCopy(fields()[1].schema(), other.PosID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.CashierID)) {
        this.CashierID = data().deepCopy(fields()[2].schema(), other.CashierID);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.CreatedTime)) {
        this.CreatedTime = data().deepCopy(fields()[3].schema(), other.CreatedTime);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.TotalAmount)) {
        this.TotalAmount = data().deepCopy(fields()[4].schema(), other.TotalAmount);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.NumberOfItems)) {
        this.NumberOfItems = data().deepCopy(fields()[5].schema(), other.NumberOfItems);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.DeliveryType)) {
        this.DeliveryType = data().deepCopy(fields()[6].schema(), other.DeliveryType);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.DeliveryAddress)) {
        this.DeliveryAddress = data().deepCopy(fields()[7].schema(), other.DeliveryAddress);
        fieldSetFlags()[7] = true;
      }
      this.DeliveryAddressBuilder = null;
      if (isValidValue(fields()[8], other.InvoiceLineItems)) {
        this.InvoiceLineItems = data().deepCopy(fields()[8].schema(), other.InvoiceLineItems);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'InvoiceNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getInvoiceNumber() {
      return InvoiceNumber;
    }


    /**
      * Sets the value of the 'InvoiceNumber' field.
      * @param value The value of 'InvoiceNumber'.
      * @return This builder.
      */
    public com.dsr.kafka.avro.types.PosInvoice.Builder setInvoiceNumber(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.InvoiceNumber = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'InvoiceNumber' field has been set.
      * @return True if the 'InvoiceNumber' field has been set, false otherwise.
      */
    public boolean hasInvoiceNumber() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'InvoiceNumber' field.
      * @return This builder.
      */
    public com.dsr.kafka.avro.types.PosInvoice.Builder clearInvoiceNumber() {
      InvoiceNumber = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'PosID' field.
      * @return The value.
      */
    public java.lang.CharSequence getPosID() {
      return PosID;
    }


    /**
      * Sets the value of the 'PosID' field.
      * @param value The value of 'PosID'.
      * @return This builder.
      */
    public com.dsr.kafka.avro.types.PosInvoice.Builder setPosID(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.PosID = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'PosID' field has been set.
      * @return True if the 'PosID' field has been set, false otherwise.
      */
    public boolean hasPosID() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'PosID' field.
      * @return This builder.
      */
    public com.dsr.kafka.avro.types.PosInvoice.Builder clearPosID() {
      PosID = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'CashierID' field.
      * @return The value.
      */
    public java.lang.CharSequence getCashierID() {
      return CashierID;
    }


    /**
      * Sets the value of the 'CashierID' field.
      * @param value The value of 'CashierID'.
      * @return This builder.
      */
    public com.dsr.kafka.avro.types.PosInvoice.Builder setCashierID(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.CashierID = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'CashierID' field has been set.
      * @return True if the 'CashierID' field has been set, false otherwise.
      */
    public boolean hasCashierID() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'CashierID' field.
      * @return This builder.
      */
    public com.dsr.kafka.avro.types.PosInvoice.Builder clearCashierID() {
      CashierID = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'CreatedTime' field.
      * @return The value.
      */
    public java.lang.Long getCreatedTime() {
      return CreatedTime;
    }


    /**
      * Sets the value of the 'CreatedTime' field.
      * @param value The value of 'CreatedTime'.
      * @return This builder.
      */
    public com.dsr.kafka.avro.types.PosInvoice.Builder setCreatedTime(java.lang.Long value) {
      validate(fields()[3], value);
      this.CreatedTime = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'CreatedTime' field has been set.
      * @return True if the 'CreatedTime' field has been set, false otherwise.
      */
    public boolean hasCreatedTime() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'CreatedTime' field.
      * @return This builder.
      */
    public com.dsr.kafka.avro.types.PosInvoice.Builder clearCreatedTime() {
      CreatedTime = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'TotalAmount' field.
      * @return The value.
      */
    public java.lang.Double getTotalAmount() {
      return TotalAmount;
    }


    /**
      * Sets the value of the 'TotalAmount' field.
      * @param value The value of 'TotalAmount'.
      * @return This builder.
      */
    public com.dsr.kafka.avro.types.PosInvoice.Builder setTotalAmount(java.lang.Double value) {
      validate(fields()[4], value);
      this.TotalAmount = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'TotalAmount' field has been set.
      * @return True if the 'TotalAmount' field has been set, false otherwise.
      */
    public boolean hasTotalAmount() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'TotalAmount' field.
      * @return This builder.
      */
    public com.dsr.kafka.avro.types.PosInvoice.Builder clearTotalAmount() {
      TotalAmount = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'NumberOfItems' field.
      * @return The value.
      */
    public java.lang.Integer getNumberOfItems() {
      return NumberOfItems;
    }


    /**
      * Sets the value of the 'NumberOfItems' field.
      * @param value The value of 'NumberOfItems'.
      * @return This builder.
      */
    public com.dsr.kafka.avro.types.PosInvoice.Builder setNumberOfItems(java.lang.Integer value) {
      validate(fields()[5], value);
      this.NumberOfItems = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'NumberOfItems' field has been set.
      * @return True if the 'NumberOfItems' field has been set, false otherwise.
      */
    public boolean hasNumberOfItems() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'NumberOfItems' field.
      * @return This builder.
      */
    public com.dsr.kafka.avro.types.PosInvoice.Builder clearNumberOfItems() {
      NumberOfItems = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'DeliveryType' field.
      * @return The value.
      */
    public java.lang.CharSequence getDeliveryType() {
      return DeliveryType;
    }


    /**
      * Sets the value of the 'DeliveryType' field.
      * @param value The value of 'DeliveryType'.
      * @return This builder.
      */
    public com.dsr.kafka.avro.types.PosInvoice.Builder setDeliveryType(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.DeliveryType = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'DeliveryType' field has been set.
      * @return True if the 'DeliveryType' field has been set, false otherwise.
      */
    public boolean hasDeliveryType() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'DeliveryType' field.
      * @return This builder.
      */
    public com.dsr.kafka.avro.types.PosInvoice.Builder clearDeliveryType() {
      DeliveryType = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'DeliveryAddress' field.
      * @return The value.
      */
    public com.dsr.kafka.avro.types.DeliveryAddress getDeliveryAddress() {
      return DeliveryAddress;
    }


    /**
      * Sets the value of the 'DeliveryAddress' field.
      * @param value The value of 'DeliveryAddress'.
      * @return This builder.
      */
    public com.dsr.kafka.avro.types.PosInvoice.Builder setDeliveryAddress(com.dsr.kafka.avro.types.DeliveryAddress value) {
      validate(fields()[7], value);
      this.DeliveryAddressBuilder = null;
      this.DeliveryAddress = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'DeliveryAddress' field has been set.
      * @return True if the 'DeliveryAddress' field has been set, false otherwise.
      */
    public boolean hasDeliveryAddress() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'DeliveryAddress' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.dsr.kafka.avro.types.DeliveryAddress.Builder getDeliveryAddressBuilder() {
      if (DeliveryAddressBuilder == null) {
        if (hasDeliveryAddress()) {
          setDeliveryAddressBuilder(com.dsr.kafka.avro.types.DeliveryAddress.newBuilder(DeliveryAddress));
        } else {
          setDeliveryAddressBuilder(com.dsr.kafka.avro.types.DeliveryAddress.newBuilder());
        }
      }
      return DeliveryAddressBuilder;
    }

    /**
     * Sets the Builder instance for the 'DeliveryAddress' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.dsr.kafka.avro.types.PosInvoice.Builder setDeliveryAddressBuilder(com.dsr.kafka.avro.types.DeliveryAddress.Builder value) {
      clearDeliveryAddress();
      DeliveryAddressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'DeliveryAddress' field has an active Builder instance
     * @return True if the 'DeliveryAddress' field has an active Builder instance
     */
    public boolean hasDeliveryAddressBuilder() {
      return DeliveryAddressBuilder != null;
    }

    /**
      * Clears the value of the 'DeliveryAddress' field.
      * @return This builder.
      */
    public com.dsr.kafka.avro.types.PosInvoice.Builder clearDeliveryAddress() {
      DeliveryAddress = null;
      DeliveryAddressBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'InvoiceLineItems' field.
      * @return The value.
      */
    public java.util.List<com.dsr.kafka.avro.types.LineItem> getInvoiceLineItems() {
      return InvoiceLineItems;
    }


    /**
      * Sets the value of the 'InvoiceLineItems' field.
      * @param value The value of 'InvoiceLineItems'.
      * @return This builder.
      */
    public com.dsr.kafka.avro.types.PosInvoice.Builder setInvoiceLineItems(java.util.List<com.dsr.kafka.avro.types.LineItem> value) {
      validate(fields()[8], value);
      this.InvoiceLineItems = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'InvoiceLineItems' field has been set.
      * @return True if the 'InvoiceLineItems' field has been set, false otherwise.
      */
    public boolean hasInvoiceLineItems() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'InvoiceLineItems' field.
      * @return This builder.
      */
    public com.dsr.kafka.avro.types.PosInvoice.Builder clearInvoiceLineItems() {
      InvoiceLineItems = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PosInvoice build() {
      try {
        PosInvoice record = new PosInvoice();
        record.InvoiceNumber = fieldSetFlags()[0] ? this.InvoiceNumber : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.PosID = fieldSetFlags()[1] ? this.PosID : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.CashierID = fieldSetFlags()[2] ? this.CashierID : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.CreatedTime = fieldSetFlags()[3] ? this.CreatedTime : (java.lang.Long) defaultValue(fields()[3]);
        record.TotalAmount = fieldSetFlags()[4] ? this.TotalAmount : (java.lang.Double) defaultValue(fields()[4]);
        record.NumberOfItems = fieldSetFlags()[5] ? this.NumberOfItems : (java.lang.Integer) defaultValue(fields()[5]);
        record.DeliveryType = fieldSetFlags()[6] ? this.DeliveryType : (java.lang.CharSequence) defaultValue(fields()[6]);
        if (DeliveryAddressBuilder != null) {
          try {
            record.DeliveryAddress = this.DeliveryAddressBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("DeliveryAddress"));
            throw e;
          }
        } else {
          record.DeliveryAddress = fieldSetFlags()[7] ? this.DeliveryAddress : (com.dsr.kafka.avro.types.DeliveryAddress) defaultValue(fields()[7]);
        }
        record.InvoiceLineItems = fieldSetFlags()[8] ? this.InvoiceLineItems : (java.util.List<com.dsr.kafka.avro.types.LineItem>) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PosInvoice>
    WRITER$ = (org.apache.avro.io.DatumWriter<PosInvoice>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PosInvoice>
    READER$ = (org.apache.avro.io.DatumReader<PosInvoice>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.InvoiceNumber == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.InvoiceNumber);
    }

    if (this.PosID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.PosID);
    }

    if (this.CashierID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CashierID);
    }

    if (this.CreatedTime == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.CreatedTime);
    }

    if (this.TotalAmount == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.TotalAmount);
    }

    if (this.NumberOfItems == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.NumberOfItems);
    }

    if (this.DeliveryType == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.DeliveryType);
    }

    if (this.DeliveryAddress == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.DeliveryAddress.customEncode(out);
    }

    long size0 = this.InvoiceLineItems.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (com.dsr.kafka.avro.types.LineItem e0: this.InvoiceLineItems) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.InvoiceNumber = null;
      } else {
        this.InvoiceNumber = in.readString(this.InvoiceNumber instanceof Utf8 ? (Utf8)this.InvoiceNumber : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.PosID = null;
      } else {
        this.PosID = in.readString(this.PosID instanceof Utf8 ? (Utf8)this.PosID : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CashierID = null;
      } else {
        this.CashierID = in.readString(this.CashierID instanceof Utf8 ? (Utf8)this.CashierID : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CreatedTime = null;
      } else {
        this.CreatedTime = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.TotalAmount = null;
      } else {
        this.TotalAmount = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.NumberOfItems = null;
      } else {
        this.NumberOfItems = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.DeliveryType = null;
      } else {
        this.DeliveryType = in.readString(this.DeliveryType instanceof Utf8 ? (Utf8)this.DeliveryType : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.DeliveryAddress = null;
      } else {
        if (this.DeliveryAddress == null) {
          this.DeliveryAddress = new com.dsr.kafka.avro.types.DeliveryAddress();
        }
        this.DeliveryAddress.customDecode(in);
      }

      long size0 = in.readArrayStart();
      java.util.List<com.dsr.kafka.avro.types.LineItem> a0 = this.InvoiceLineItems;
      if (a0 == null) {
        a0 = new SpecificData.Array<com.dsr.kafka.avro.types.LineItem>((int)size0, SCHEMA$.getField("InvoiceLineItems").schema());
        this.InvoiceLineItems = a0;
      } else a0.clear();
      SpecificData.Array<com.dsr.kafka.avro.types.LineItem> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.dsr.kafka.avro.types.LineItem>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          com.dsr.kafka.avro.types.LineItem e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new com.dsr.kafka.avro.types.LineItem();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

    } else {
      for (int i = 0; i < 9; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.InvoiceNumber = null;
          } else {
            this.InvoiceNumber = in.readString(this.InvoiceNumber instanceof Utf8 ? (Utf8)this.InvoiceNumber : null);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.PosID = null;
          } else {
            this.PosID = in.readString(this.PosID instanceof Utf8 ? (Utf8)this.PosID : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CashierID = null;
          } else {
            this.CashierID = in.readString(this.CashierID instanceof Utf8 ? (Utf8)this.CashierID : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CreatedTime = null;
          } else {
            this.CreatedTime = in.readLong();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.TotalAmount = null;
          } else {
            this.TotalAmount = in.readDouble();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.NumberOfItems = null;
          } else {
            this.NumberOfItems = in.readInt();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.DeliveryType = null;
          } else {
            this.DeliveryType = in.readString(this.DeliveryType instanceof Utf8 ? (Utf8)this.DeliveryType : null);
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.DeliveryAddress = null;
          } else {
            if (this.DeliveryAddress == null) {
              this.DeliveryAddress = new com.dsr.kafka.avro.types.DeliveryAddress();
            }
            this.DeliveryAddress.customDecode(in);
          }
          break;

        case 8:
          long size0 = in.readArrayStart();
          java.util.List<com.dsr.kafka.avro.types.LineItem> a0 = this.InvoiceLineItems;
          if (a0 == null) {
            a0 = new SpecificData.Array<com.dsr.kafka.avro.types.LineItem>((int)size0, SCHEMA$.getField("InvoiceLineItems").schema());
            this.InvoiceLineItems = a0;
          } else a0.clear();
          SpecificData.Array<com.dsr.kafka.avro.types.LineItem> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.dsr.kafka.avro.types.LineItem>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              com.dsr.kafka.avro.types.LineItem e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new com.dsr.kafka.avro.types.LineItem();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










